// Generated from /home/justinhuy/repos/flux_language/parser/Primitives.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class Primitives extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TEXT=1, TEXT_TYPE=2, BOOLEAN=3, BOOLEAN_TYPE=4, NUMBER=5, SIGN=6, INTEGER=7, 
		DECIMAL=8, INFIX=9, NUMBER_TYPE=10, DIGIT=11, OCTET=12, IPV4=13, IPV4_TYPE=14, 
		VAR_IDENTIFIER=15, COMMON_IDENTIFIER=16, ARITHMETIC_OPERATOR=17, LOGICAL_OPERATOR=18, 
		L_BLOCK=19, R_BLOCK=20, AT=21, WS=22;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TEXT", "TEXT_TYPE", "BOOLEAN", "BOOLEAN_TYPE", "NUMBER", "SIGN", "INTEGER", 
			"DECIMAL", "INFIX", "NUMBER_TYPE", "DIGIT", "OCTET", "IPV4", "IPV4_TYPE", 
			"VAR_IDENTIFIER", "COMMON_IDENTIFIER", "ARITHMETIC_OPERATOR", "LOGICAL_OPERATOR", 
			"L_BLOCK", "R_BLOCK", "AT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'text'", null, "'boolean'", null, null, null, null, null, 
			"'num'", null, null, null, "'ipv4'", null, null, null, null, "'{'", "'}'", 
			"'@'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TEXT", "TEXT_TYPE", "BOOLEAN", "BOOLEAN_TYPE", "NUMBER", "SIGN", 
			"INTEGER", "DECIMAL", "INFIX", "NUMBER_TYPE", "DIGIT", "OCTET", "IPV4", 
			"IPV4_TYPE", "VAR_IDENTIFIER", "COMMON_IDENTIFIER", "ARITHMETIC_OPERATOR", 
			"LOGICAL_OPERATOR", "L_BLOCK", "R_BLOCK", "AT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public Primitives(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Primitives.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0016\u00ce\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0001\u0000\u0001\u0000\u0005\u00000\b\u0000"+
		"\n\u0000\f\u00003\t\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0005\u0000"+
		"8\b\u0000\n\u0000\f\u0000;\t\u0000\u0001\u0000\u0003\u0000>\b\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0003\u0002N\b\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0003\u0004Y\b\u0004\u0001\u0004\u0001\u0004\u0003\u0004]\b\u0004"+
		"\u0001\u0004\u0003\u0004`\b\u0004\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0005\u0006g\b\u0006\n\u0006\f\u0006j\t\u0006"+
		"\u0003\u0006l\b\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0005\u0007"+
		"q\b\u0007\n\u0007\f\u0007t\t\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0003\u000b"+
		"\u0081\b\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0003\u000b\u008e\b\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0005\u000e\u009f\b\u000e\n\u000e\f\u000e\u00a2\t\u000e\u0001"+
		"\u000f\u0001\u000f\u0005\u000f\u00a6\b\u000f\n\u000f\f\u000f\u00a9\t\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0003\u0011\u00c0\b\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0004\u0015\u00c9\b\u0015\u000b\u0015\f\u0015\u00ca\u0001\u0015\u0001"+
		"\u0015\u00019\u0000\u0016\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004"+
		"\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017"+
		"\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'"+
		"\u0014)\u0015+\u0016\u0001\u0000\r\u0001\u0000\"\"\u0002\u0000++--\u0001"+
		"\u000019\u0001\u000009\u0006\u0000EEGGMMPPTTkk\u0001\u000004\u0001\u0000"+
		"05\u0001\u0000az\u0003\u000009AZaz\u0002\u0000AZaz\u0005\u0000%%*+--/"+
		"/^^\u0002\u0000<<>>\u0003\u0000\t\n\r\r  \u00e7\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0001=\u0001\u0000\u0000\u0000\u0003?\u0001\u0000\u0000\u0000\u0005"+
		"M\u0001\u0000\u0000\u0000\u0007O\u0001\u0000\u0000\u0000\tX\u0001\u0000"+
		"\u0000\u0000\u000ba\u0001\u0000\u0000\u0000\rk\u0001\u0000\u0000\u0000"+
		"\u000fm\u0001\u0000\u0000\u0000\u0011u\u0001\u0000\u0000\u0000\u0013w"+
		"\u0001\u0000\u0000\u0000\u0015{\u0001\u0000\u0000\u0000\u0017\u008d\u0001"+
		"\u0000\u0000\u0000\u0019\u008f\u0001\u0000\u0000\u0000\u001b\u0097\u0001"+
		"\u0000\u0000\u0000\u001d\u009c\u0001\u0000\u0000\u0000\u001f\u00a3\u0001"+
		"\u0000\u0000\u0000!\u00aa\u0001\u0000\u0000\u0000#\u00bf\u0001\u0000\u0000"+
		"\u0000%\u00c1\u0001\u0000\u0000\u0000\'\u00c3\u0001\u0000\u0000\u0000"+
		")\u00c5\u0001\u0000\u0000\u0000+\u00c8\u0001\u0000\u0000\u0000-1\u0005"+
		"\"\u0000\u0000.0\b\u0000\u0000\u0000/.\u0001\u0000\u0000\u000003\u0001"+
		"\u0000\u0000\u00001/\u0001\u0000\u0000\u000012\u0001\u0000\u0000\u0000"+
		"24\u0001\u0000\u0000\u000031\u0001\u0000\u0000\u00004>\u0005\"\u0000\u0000"+
		"59\u0005\'\u0000\u000068\t\u0000\u0000\u000076\u0001\u0000\u0000\u0000"+
		"8;\u0001\u0000\u0000\u00009:\u0001\u0000\u0000\u000097\u0001\u0000\u0000"+
		"\u0000:<\u0001\u0000\u0000\u0000;9\u0001\u0000\u0000\u0000<>\u0005\'\u0000"+
		"\u0000=-\u0001\u0000\u0000\u0000=5\u0001\u0000\u0000\u0000>\u0002\u0001"+
		"\u0000\u0000\u0000?@\u0005t\u0000\u0000@A\u0005e\u0000\u0000AB\u0005x"+
		"\u0000\u0000BC\u0005t\u0000\u0000C\u0004\u0001\u0000\u0000\u0000DE\u0005"+
		"t\u0000\u0000EF\u0005r\u0000\u0000FG\u0005u\u0000\u0000GN\u0005e\u0000"+
		"\u0000HI\u0005f\u0000\u0000IJ\u0005a\u0000\u0000JK\u0005l\u0000\u0000"+
		"KL\u0005s\u0000\u0000LN\u0005e\u0000\u0000MD\u0001\u0000\u0000\u0000M"+
		"H\u0001\u0000\u0000\u0000N\u0006\u0001\u0000\u0000\u0000OP\u0005b\u0000"+
		"\u0000PQ\u0005o\u0000\u0000QR\u0005o\u0000\u0000RS\u0005l\u0000\u0000"+
		"ST\u0005e\u0000\u0000TU\u0005a\u0000\u0000UV\u0005n\u0000\u0000V\b\u0001"+
		"\u0000\u0000\u0000WY\u0003\u000b\u0005\u0000XW\u0001\u0000\u0000\u0000"+
		"XY\u0001\u0000\u0000\u0000Y\\\u0001\u0000\u0000\u0000Z]\u0003\r\u0006"+
		"\u0000[]\u0003\u000f\u0007\u0000\\Z\u0001\u0000\u0000\u0000\\[\u0001\u0000"+
		"\u0000\u0000]_\u0001\u0000\u0000\u0000^`\u0003\u0011\b\u0000_^\u0001\u0000"+
		"\u0000\u0000_`\u0001\u0000\u0000\u0000`\n\u0001\u0000\u0000\u0000ab\u0007"+
		"\u0001\u0000\u0000b\f\u0001\u0000\u0000\u0000cl\u00050\u0000\u0000dh\u0007"+
		"\u0002\u0000\u0000eg\u000209\u0000fe\u0001\u0000\u0000\u0000gj\u0001\u0000"+
		"\u0000\u0000hf\u0001\u0000\u0000\u0000hi\u0001\u0000\u0000\u0000il\u0001"+
		"\u0000\u0000\u0000jh\u0001\u0000\u0000\u0000kc\u0001\u0000\u0000\u0000"+
		"kd\u0001\u0000\u0000\u0000l\u000e\u0001\u0000\u0000\u0000mn\u0003\r\u0006"+
		"\u0000nr\u0005.\u0000\u0000oq\u0007\u0003\u0000\u0000po\u0001\u0000\u0000"+
		"\u0000qt\u0001\u0000\u0000\u0000rp\u0001\u0000\u0000\u0000rs\u0001\u0000"+
		"\u0000\u0000s\u0010\u0001\u0000\u0000\u0000tr\u0001\u0000\u0000\u0000"+
		"uv\u0007\u0004\u0000\u0000v\u0012\u0001\u0000\u0000\u0000wx\u0005n\u0000"+
		"\u0000xy\u0005u\u0000\u0000yz\u0005m\u0000\u0000z\u0014\u0001\u0000\u0000"+
		"\u0000{|\u0007\u0003\u0000\u0000|\u0016\u0001\u0000\u0000\u0000}\u008e"+
		"\u00050\u0000\u0000~\u0080\u0007\u0002\u0000\u0000\u007f\u0081\u0003\u0015"+
		"\n\u0000\u0080\u007f\u0001\u0000\u0000\u0000\u0080\u0081\u0001\u0000\u0000"+
		"\u0000\u0081\u008e\u0001\u0000\u0000\u0000\u0082\u0083\u00051\u0000\u0000"+
		"\u0083\u0084\u0003\u0015\n\u0000\u0084\u0085\u0003\u0015\n\u0000\u0085"+
		"\u008e\u0001\u0000\u0000\u0000\u0086\u0087\u00052\u0000\u0000\u0087\u0088"+
		"\u0007\u0005\u0000\u0000\u0088\u008e\u0003\u0015\n\u0000\u0089\u008a\u0005"+
		"2\u0000\u0000\u008a\u008b\u00055\u0000\u0000\u008b\u008c\u0001\u0000\u0000"+
		"\u0000\u008c\u008e\u0007\u0006\u0000\u0000\u008d}\u0001\u0000\u0000\u0000"+
		"\u008d~\u0001\u0000\u0000\u0000\u008d\u0082\u0001\u0000\u0000\u0000\u008d"+
		"\u0086\u0001\u0000\u0000\u0000\u008d\u0089\u0001\u0000\u0000\u0000\u008e"+
		"\u0018\u0001\u0000\u0000\u0000\u008f\u0090\u0003\u0017\u000b\u0000\u0090"+
		"\u0091\u0005.\u0000\u0000\u0091\u0092\u0003\u0017\u000b\u0000\u0092\u0093"+
		"\u0005.\u0000\u0000\u0093\u0094\u0003\u0017\u000b\u0000\u0094\u0095\u0005"+
		".\u0000\u0000\u0095\u0096\u0003\u0017\u000b\u0000\u0096\u001a\u0001\u0000"+
		"\u0000\u0000\u0097\u0098\u0005i\u0000\u0000\u0098\u0099\u0005p\u0000\u0000"+
		"\u0099\u009a\u0005v\u0000\u0000\u009a\u009b\u00054\u0000\u0000\u009b\u001c"+
		"\u0001\u0000\u0000\u0000\u009c\u00a0\u0007\u0007\u0000\u0000\u009d\u009f"+
		"\u0007\b\u0000\u0000\u009e\u009d\u0001\u0000\u0000\u0000\u009f\u00a2\u0001"+
		"\u0000\u0000\u0000\u00a0\u009e\u0001\u0000\u0000\u0000\u00a0\u00a1\u0001"+
		"\u0000\u0000\u0000\u00a1\u001e\u0001\u0000\u0000\u0000\u00a2\u00a0\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a7\u0007\t\u0000\u0000\u00a4\u00a6\u0007\b"+
		"\u0000\u0000\u00a5\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a9\u0001\u0000"+
		"\u0000\u0000\u00a7\u00a5\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000"+
		"\u0000\u0000\u00a8 \u0001\u0000\u0000\u0000\u00a9\u00a7\u0001\u0000\u0000"+
		"\u0000\u00aa\u00ab\u0007\n\u0000\u0000\u00ab\"\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0005x\u0000\u0000\u00ad\u00ae\u0005o\u0000\u0000\u00ae\u00c0"+
		"\u0005r\u0000\u0000\u00af\u00b0\u0005a\u0000\u0000\u00b0\u00b1\u0005n"+
		"\u0000\u0000\u00b1\u00c0\u0005d\u0000\u0000\u00b2\u00b3\u0005o\u0000\u0000"+
		"\u00b3\u00c0\u0005r\u0000\u0000\u00b4\u00b5\u0005n\u0000\u0000\u00b5\u00b6"+
		"\u0005o\u0000\u0000\u00b6\u00c0\u0005t\u0000\u0000\u00b7\u00c0\u0005="+
		"\u0000\u0000\u00b8\u00b9\u0005!\u0000\u0000\u00b9\u00c0\u0005=\u0000\u0000"+
		"\u00ba\u00c0\u0007\u000b\u0000\u0000\u00bb\u00bc\u0005<\u0000\u0000\u00bc"+
		"\u00c0\u0005=\u0000\u0000\u00bd\u00be\u0005>\u0000\u0000\u00be\u00c0\u0005"+
		"=\u0000\u0000\u00bf\u00ac\u0001\u0000\u0000\u0000\u00bf\u00af\u0001\u0000"+
		"\u0000\u0000\u00bf\u00b2\u0001\u0000\u0000\u0000\u00bf\u00b4\u0001\u0000"+
		"\u0000\u0000\u00bf\u00b7\u0001\u0000\u0000\u0000\u00bf\u00b8\u0001\u0000"+
		"\u0000\u0000\u00bf\u00ba\u0001\u0000\u0000\u0000\u00bf\u00bb\u0001\u0000"+
		"\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00c0$\u0001\u0000\u0000"+
		"\u0000\u00c1\u00c2\u0005{\u0000\u0000\u00c2&\u0001\u0000\u0000\u0000\u00c3"+
		"\u00c4\u0005}\u0000\u0000\u00c4(\u0001\u0000\u0000\u0000\u00c5\u00c6\u0005"+
		"@\u0000\u0000\u00c6*\u0001\u0000\u0000\u0000\u00c7\u00c9\u0007\f\u0000"+
		"\u0000\u00c8\u00c7\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000"+
		"\u0000\u00ca\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cb\u0001\u0000\u0000"+
		"\u0000\u00cb\u00cc\u0001\u0000\u0000\u0000\u00cc\u00cd\u0006\u0015\u0000"+
		"\u0000\u00cd,\u0001\u0000\u0000\u0000\u0012\u000019=MX\\_fhkr\u0080\u008d"+
		"\u00a0\u00a7\u00bf\u00ca\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}